// <auto-generated />
using System;
using KDramaSystem.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KDramaSystem.Infrastructure.Migrations
{
    [DbContext(typeof(KDramaDbContext))]
    [Migration("20250804214156_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Atividade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReferenciaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Ator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Altura")
                        .HasPrecision(5, 2)
                        .HasColumnType("TEXT");

                    b.Property<int?>("AnoNascimento")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Biografia")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("FotoUrl")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Instagram")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCompleto")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Pais")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Atores");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Avaliacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAvaliacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecomendadoPorNomeLivre")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RecomendadoPorUsuarioId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TemporadaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Comentario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AvaliacaoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TemporadaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Dorama", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AnoLancamento")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EmExibicao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagemCapaUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaisOrigem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Plataforma")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sinopse")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TituloOriginal")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Doramas");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.DoramaAtor", b =>
                {
                    b.Property<Guid>("DoramaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AtorId")
                        .HasColumnType("TEXT");

                    b.HasKey("DoramaId", "AtorId");

                    b.HasIndex("AtorId");

                    b.ToTable("DoramaAtores");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.DoramaLista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAdicao")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DoramaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ListaPrateleiraId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ListaPrateleiraId");

                    b.ToTable("DoramaLista");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Episodio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("DuracaoMinutos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sinopse")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TemporadaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TemporadaId1")
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TemporadaId");

                    b.HasIndex("TemporadaId1");

                    b.ToTable("Episodios");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Genero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DoramaId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DoramaId");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.ListaPrateleira", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ListasPrateleira");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.ProgressoTemporada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("EpisodiosAssistidos")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TemporadaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ProgressoTemporadas");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Temporada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AnoLancamento")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("DoramaId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmExibicao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sinopse")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DoramaId");

                    b.ToTable("Temporadas");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Bio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FotoUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.UsuarioAutenticacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UsuariosAutenticacao");
                });

            modelBuilder.Entity("UsuarioRelacionamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SeguidorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SeguindoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SeguindoId");

                    b.HasIndex("SeguidorId", "SeguindoId")
                        .IsUnique();

                    b.ToTable("UsuarioRelacionamentos");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Atividade", b =>
                {
                    b.HasOne("KDramaSystem.Domain.Entities.Usuario", null)
                        .WithMany("Atividades")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("KDramaSystem.Domain.ValueObjetcs.TipoAtividade", "Tipo", b1 =>
                        {
                            b1.Property<Guid>("AtividadeId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Valor")
                                .HasColumnType("INTEGER")
                                .HasColumnName("TipoAtividade");

                            b1.HasKey("AtividadeId");

                            b1.ToTable("Atividades");

                            b1.WithOwner()
                                .HasForeignKey("AtividadeId");
                        });

                    b.Navigation("Tipo")
                        .IsRequired();
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Avaliacao", b =>
                {
                    b.HasOne("KDramaSystem.Domain.Entities.Usuario", null)
                        .WithMany("Avaliacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("KDramaSystem.Domain.ValueObjects.ComentarioValor", "Comentario", b1 =>
                        {
                            b1.Property<Guid>("AvaliacaoId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Texto")
                                .IsRequired()
                                .HasMaxLength(1000)
                                .HasColumnType("TEXT")
                                .HasColumnName("Comentario");

                            b1.HasKey("AvaliacaoId");

                            b1.ToTable("Avaliacoes");

                            b1.WithOwner()
                                .HasForeignKey("AvaliacaoId");
                        });

                    b.OwnsOne("KDramaSystem.Domain.ValueObjetcs.Nota", "Nota", b1 =>
                        {
                            b1.Property<Guid>("AvaliacaoId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Valor")
                                .HasColumnType("INTEGER")
                                .HasColumnName("Nota");

                            b1.HasKey("AvaliacaoId");

                            b1.ToTable("Avaliacoes");

                            b1.WithOwner()
                                .HasForeignKey("AvaliacaoId");
                        });

                    b.Navigation("Comentario");

                    b.Navigation("Nota")
                        .IsRequired();
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Comentario", b =>
                {
                    b.HasOne("KDramaSystem.Domain.Entities.Usuario", null)
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("KDramaSystem.Domain.ValueObjects.ComentarioValor", "Texto", b1 =>
                        {
                            b1.Property<Guid>("ComentarioId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Texto")
                                .IsRequired()
                                .HasMaxLength(1000)
                                .HasColumnType("TEXT")
                                .HasColumnName("Texto");

                            b1.HasKey("ComentarioId");

                            b1.ToTable("Comentarios");

                            b1.WithOwner()
                                .HasForeignKey("ComentarioId");
                        });

                    b.Navigation("Texto")
                        .IsRequired();
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.DoramaAtor", b =>
                {
                    b.HasOne("KDramaSystem.Domain.Entities.Ator", "Ator")
                        .WithMany("Doramas")
                        .HasForeignKey("AtorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KDramaSystem.Domain.Entities.Dorama", "Dorama")
                        .WithMany("Atores")
                        .HasForeignKey("DoramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ator");

                    b.Navigation("Dorama");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.DoramaLista", b =>
                {
                    b.HasOne("KDramaSystem.Domain.Entities.ListaPrateleira", null)
                        .WithMany("Doramas")
                        .HasForeignKey("ListaPrateleiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Episodio", b =>
                {
                    b.HasOne("KDramaSystem.Domain.Entities.Temporada", null)
                        .WithMany()
                        .HasForeignKey("TemporadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KDramaSystem.Domain.Entities.Temporada", null)
                        .WithMany("Episodios")
                        .HasForeignKey("TemporadaId1");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Genero", b =>
                {
                    b.HasOne("KDramaSystem.Domain.Entities.Dorama", null)
                        .WithMany("Generos")
                        .HasForeignKey("DoramaId");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.ListaPrateleira", b =>
                {
                    b.HasOne("KDramaSystem.Domain.Entities.Usuario", null)
                        .WithMany("Listas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.ProgressoTemporada", b =>
                {
                    b.HasOne("KDramaSystem.Domain.Entities.Usuario", null)
                        .WithMany("Progresso")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("KDramaSystem.Domain.ValueObjects.StatusDorama", "Status", b1 =>
                        {
                            b1.Property<Guid>("ProgressoTemporadaId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Valor")
                                .HasColumnType("INTEGER")
                                .HasColumnName("Status");

                            b1.HasKey("ProgressoTemporadaId");

                            b1.ToTable("ProgressoTemporadas");

                            b1.WithOwner()
                                .HasForeignKey("ProgressoTemporadaId");
                        });

                    b.Navigation("Status")
                        .IsRequired();
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Temporada", b =>
                {
                    b.HasOne("KDramaSystem.Domain.Entities.Dorama", null)
                        .WithMany("Temporadas")
                        .HasForeignKey("DoramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UsuarioRelacionamento", b =>
                {
                    b.HasOne("KDramaSystem.Domain.Entities.Usuario", "Seguidor")
                        .WithMany("Seguindo")
                        .HasForeignKey("SeguidorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KDramaSystem.Domain.Entities.Usuario", "Seguindo")
                        .WithMany("Seguidores")
                        .HasForeignKey("SeguindoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Seguidor");

                    b.Navigation("Seguindo");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Ator", b =>
                {
                    b.Navigation("Doramas");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Dorama", b =>
                {
                    b.Navigation("Atores");

                    b.Navigation("Generos");

                    b.Navigation("Temporadas");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.ListaPrateleira", b =>
                {
                    b.Navigation("Doramas");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Temporada", b =>
                {
                    b.Navigation("Episodios");
                });

            modelBuilder.Entity("KDramaSystem.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Atividades");

                    b.Navigation("Avaliacoes");

                    b.Navigation("Comentarios");

                    b.Navigation("Listas");

                    b.Navigation("Progresso");

                    b.Navigation("Seguidores");

                    b.Navigation("Seguindo");
                });
#pragma warning restore 612, 618
        }
    }
}
